@{
    Layout = "~/Areas/Admin/Views/Shared/_LayoutAdmin.cshtml";
    ViewBag.Title = "Update Product";
    List<WebBanTra.Models.DanhMuc> listDanhMuc = ViewBag.DanhMucs as List<WebBanTra.Models.DanhMuc>;
}

@model WebBanTra.Models.SanPham

<div class="d-flex flex-column justify-content-center m-3 container" style="margin: 85px 0 auto">
    @using (Html.BeginForm("UpdateSanPham", "Admin", FormMethod.Post, new { area = "Admin", @class = "w-50 form d-flex flex-column gap-2" }))
    {
        <h3 class="text-primary">CHỈNH SỬA SẢN PHẨM</h3>

        <div class="form-group" hidden>
            @Html.LabelFor(x => x.MaSP, new { @class = "form-label" })
            @Html.TextBoxFor(x => x.MaSP, new { @class = "form-control", required = "required" })
            @Html.ValidationMessageFor(x => x.MaSP, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(x => x.TenSP, new { @class = "form-label" })
            @Html.TextBoxFor(x => x.TenSP, new { @class = "form-control", required = "required" })
            @Html.ValidationMessageFor(x => x.TenSP, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(x => x.Gia, new { @class = "form-label" })
            @Html.TextBoxFor(x => x.Gia, new { @class = "form-control", required = "required", type = "number" })
            @Html.ValidationMessageFor(x => x.Gia, "", new { @class = "text-danger" })
        </div>
        <div class="form-group">
            @Html.LabelFor(x => x.SoLuongTon, new { @class = "form-label" })
            @Html.TextBoxFor(x => x.SoLuongTon, new { @class = "form-control", @id = "soLuong", required = "required", type = "number"})
            @Html.ValidationMessageFor(x => x.SoLuongTon, "", new { @class = "text-danger" })
        </div>
        @*<div class="form-group">
                @Html.LabelFor(x => x.MoTa_SanPham, new { @class = "form-label" })
                @Html.TextAreaFor(x => x.MoTa_SanPham, new { @class = "form-control", rows = "4" })
                @Html.ValidationMessageFor(x => x.MoTa_SanPham, "", new { @class = "text-danger" })
            </div>*@

        <div class="form-group">
            <label for="MaDM">Danh mục</label>
            <select name="MaDM" class = "form-control">
                <optgroup label="Danh mục">
                    @foreach (var item in listDanhMuc)
                    {
                        if (item.MaDM == Model.MaDM)
                        {
                            <option value="@item.MaDM" selected>@item.TenDM</option>
                            
                        }
                        else
                        {
                            <option value="@item.MaDM">@item.TenDM</option>

                        }
                    }
                </optgroup>
            </select>
        </div>

        <div class="mt-3">
            @Html.ActionLink("Cancel", "Admin", "Admin", new { area = "Admin" ,@class = "btn btn-secondary" })
            <button onclick="showNotification()" class="btn btn-success">Submit</button>
        </div>
    }
</div>
<script>
    
    document.getElementById('soLuong').addEventListener('input', function () {
        var value = this.value;
        if (value < 1) {
            this.value = 1;
            showNotificationFail();
        }
        else {
            showNotification();
        }
    });

    function showNotification() {
        const notification = document.getElementById('notification');
        notification.classList.remove('hide'); // Xóa lớp ẩn nếu có
        notification.classList.add('show'); // Thêm lớp hiển thị

        // Sau 3 giây, ẩn thông báo
        setTimeout(() => {
            notification.classList.remove('show');
            notification.classList.add('hide');
        }, 3000);
    }

    function showNotificationFail() {
        const notification = document.getElementById('notification');
        notification.classList.remove('hide'); // Xóa lớp ẩn nếu có
        notification.classList.add('show'); // Thêm lớp hiển thị

        // Sau 3 giây, ẩn thông báo
        setTimeout(() => {
            notification.classList.remove('show');
            notification.classList.add('hide');
        }, 3000);
    }
</script>
