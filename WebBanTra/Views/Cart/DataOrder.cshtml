@model List<WebBanTra.OOP.CartDetail>
<link href="~/assets/css/cart.css" rel="stylesheet" />
@{ 
    List<WebBanTra.Models.SanPham> lsp = ViewBag.listSP;
}
@if (Model.Count > 0)
{
    <table class="table">
        <tr>
            <th colspan="2">Sản phẩm</th>
            <th>Tạm tính</th>
        </tr>

        @if (Model != null)
        {
            foreach (var item in Model)
            {
                <tr>
                    <td>
                        <a href="@Url.Action("ChiTietSanPham", "Product", new { id = item.MaSP })"><img style="width: 100px" src="@item.LinkAnh" alt="Alternate Text" /></a>
                    </td>
                    <td>
                        <a href="@Url.Action("ChiTietSanPham", "Product", new { id = item.MaSP })"><p style="text-align:center;">@item.TenSP</p></a>
                        
                        <div class="btn-group">
                            <div class="input-group-text inputgroup">
                                <button id="btnDown" onclick="decrementQuantity(@item.MaSP)">-</button>
                                <input type="text" name="number" title="@lsp.Where(r=>r.MaSP == item.MaSP).FirstOrDefault().SoLuongTon" value="@item.SoLuong" id="numberPD-@item.MaSP" />
                                <button id="btnUp" onclick="incrementQuantity(@item.MaSP)">+</button>
                            </div>
                        </div>
                    </td>
                    <td><p style="text-align:center; margin-top: 30%;" id="current-tong-tien-@item.MaSP">@item.TongTien.ToString() VNĐ</p></td>
                </tr>
            }
        }

    </table>
    <script>
        var elements = document.querySelectorAll('[id*="numberPD-"]');

        // Duyệt qua các phần tử và hiển thị thông tin (nếu cần)
        elements.forEach(function (element) {
            element.addEventListener('input', function () {
                var max = parseInt(element.title, 10); // Lấy giá trị max từ thuộc tính title
                var quantity = parseInt(element.value, 10); // Lấy giá trị nhập vào

                if (!isNaN(element.value) || !(element.value).trim() === "") {
                    if (quantity > max) {
                        element.value = max; // Giới hạn giá trị bằng max
                        showNotificationFail();

                    }
                    else if (quantity <= 0) {
                        element.value = 1;
                        showNotificationFail();
                    }
                    else if (quantity != null) {
                        element.value = 1;
                        showNotificationFail();
                    }
                    else {
                        showNotification(); // Gọi thông báo thành công
                    }
                }
                else {
                    element.value = 1;
                    showNotificationFail();
                }
            });
        });

        let timeoutIdCart;
        function increasement(idInput) {
            var quantityInput = document.getElementById(idInput);
            var quantity = parseInt(quantityInput.value);
            var max = parseInt(quantityInput.title);
            if (quantity < max) {
                quantityInput.value = quantity + 1;
                quantity = quantity + 1;
            }
            else {
                showNotificationFail();
            }
            return quantity;
            
        }
        function decreasement(idInput) {
            var quantityInput = document.getElementById(idInput);
            var quantity = parseInt(quantityInput.value);
            if (quantity > 1) {
                quantityInput.value = quantity - 1;
                quantity = quantity - 1;
            }
            else {
                showNotificationFail();
            }
            return quantity;
        }
        function decrementQuantity(productId) {
            var IdInput = ('numberPD-' + productId);
            var quantity = parseInt(decreasement(IdInput));

            if (timeoutIdCart) {
                clearTimeout(timeoutIdCart);
            }

            timeoutIdCart = setTimeout(() => {
                updateProduct(parseInt(productId), quantity);
            }, 1000);
        }

        function incrementQuantity(productId) {
            var IdInput = ('numberPD-' + productId);
            var quantity = parseInt(increasement(IdInput));

            if (timeoutIdCart) {
                clearTimeout(timeoutIdCart);
            }

            timeoutIdCart = setTimeout(() => {
                updateProduct(parseInt(productId), quantity);
            }, 1000);
        }

        function updateProduct(id, quantity) {
            $.ajax({
                url: '/Cart/UpdateCart',
                type: 'POST',
                data: {
                    id: id,
                    quantity: quantity
                },
                success: function (res) {
                    if (res.success) {
                        // Cập nhật giá trị tiền tệ của sản phẩm
                        $('#current-tong-tien-' + id).html(
                            res.data.itemPrice.toLocaleString("vi-VN", { style: "currency", currency: "VND" })
                        );

                        // Cập nhật tổng tiền giỏ hàng
                        $('#current-tong-tien-gio-hang').html(
                            res.data.totalPrice.toLocaleString("vi-VN", { style: "currency", currency: "VND" })
                        );

                        // Cập nhật giá trị VAT
                        $('#current-VAT').html((res.data.totalPrice * 0.08).toLocaleString("vi-VN", { style: "currency", currency: "VND" }));

                        // Cập nhật tổng tiền thanh toán
                        $('#current-tong-tien-thanh-toan').html((res.data.totalPrice + (res.data.totalPrice * 0.08)).toLocaleString("vi-VN", { style: "currency", currency: "VND" }));
                        showNotification();
                        
                    } else {
                        
                        // Cập nhật số lượng sản phẩm
                        $('#numberPD-' + id).html(res.data.itemQuantity);

                        // Cập nhật giá trị tiền tệ của sản phẩm
                        $('#current-tong-tien-' + id).html(res.data.itemPrice.toLocaleString("vi-VN", { style: "currency", currency: "VND" }));

                        // Cập nhật tổng tiền giỏ hàng
                        $('#current-tong-tien-gio-hang').html(res.data.totalPrice.toLocaleString("vi-VN", { style: "currency", currency: "VND" }));

                        // Cập nhật giá trị VAT
                        $('#current-VAT').html((res.data.totalPrice * 0.08).toLocaleString("vi-VN", { style: "currency", currency: "VND" }));

                        // Cập nhật tổng tiền thanh toán
                        $('#current-tong-tien-thanh-toan').html((res.data.totalPrice + (res.data.totalPrice * 0.08)).toLocaleString("vi-VN", { style: "currency", currency: "VND" }));

                    }
                },
                error: function (err) {
                    showNotificationFail();
                }
            });
        }
        function showNotification() {
            const notification = document.getElementById('notification');
            notification.classList.remove('hide'); // Xóa lớp ẩn nếu có
            notification.classList.add('show'); // Thêm lớp hiển thị

            // Sau 3 giây, ẩn thông báo
            setTimeout(() => {
                notification.classList.remove('show');
                notification.classList.add('hide');
            }, 3000);
        }

        function showNotificationFail() {
            const notification = document.getElementById('notification');
            notification.classList.remove('hide'); // Xóa lớp ẩn nếu có
            notification.classList.add('show'); // Thêm lớp hiển thị

            // Sau 3 giây, ẩn thông báo
            setTimeout(() => {
                notification.classList.remove('show');
                notification.classList.add('hide');
            }, 3000);
        }
    </script>
}